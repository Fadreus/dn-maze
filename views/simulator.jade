extends layout

block custom_script
  -
    var urls  = JSON.stringify({
      mainbar: fn.url.mainbar(),
      border: fn.url.uitemplatetexture('uit_gesturebutton'),
      job: fn.url.json(line[2].EnglishName)
    });
    var job = JSON.stringify({
      EnglishName: line[2].EnglishName,
      MaxLevel: cap,
      Levels: levels,
      SP: sp_ratios,
      TSP: [0,0,0],
      Names: line.map(function(l) { return l.JobName }),
      ApplyType: 0,
      Free: true,
      BaseSkills: {},
      SkillGroups: {},
      Cache: {}
    });
  script(type='text/javascript', src=fn.url.js('dnss'))
  script(type='text/javascript', src=fn.url.js('skill'))
  script(type='text/javascript', src=fn.url.js('description'))
  script(type='text/javascript') var db;var Job=!{job};dnss(!{urls});

block content
  div.container
    div.row#changables
      div.col-md-3.div
        div.form-inline: div.form-group
          select.form-control#level
          button.level-btn.btn.btn-sm.btn-default(type='reset') Reset
      div.col-md-6
      div.col-md-3
        div.btn-group.push-left
          button#free.btn.btn-sm.btn-primary(type='button') Free
          button#strict.btn.btn-sm.btn-default(type='button') Strict
        div.btn-group.pull-right
          button#pve.btn.btn-sm.btn-primary(type='button') PvE
          button#pvp.btn.btn-sm.btn-default(type='button') PvP
    div.row
      div.col-md-12
        div.progress
          span.curr-progress 0 SP
          span.max-progress #{max_sp} SP
          div.progress-bar.progress-bar-info(style={width: '0%'})
          span.rem-progress #{max_sp} SP
    div.row
      each job, index in line
        div.col-md-4.noselect
          div.panel.panel-default(data-job=index)
            +panel_header(job, index)
            +panel_body(job)


mixin panel_header(job, index)
  - var sp = [0, Math.floor(max_sp * sp_ratios[index])]
  div.panel-heading= job.JobName
    div.jobsprite(style=fn.image.job(job))
    span.label.pull-right #{sp.join('/')}


mixin panel_body(job)
  div.panel-body
    table.skill-table(style=fn.image.skilltree(job))
      each skillRow in job.SkillTree
        tr.skill-tr
          each skillID in skillRow
            +skill(job.Skills[skillID], skillID)


mixin skill(skill, skillID)
  td(class='skill-td')
    if skill
      - var sprite = [skill.Sprite, skill.IconCol, skill.IconRow].join(',')
      -
        var lvl = [
          skill.Levels[1].LevelLimit == 1 ? 1 : 0,
          skill.MaxLevel - skill.SPMaxLevel,
          0, // total SP
          0 // tech
        ].join(',')
      div.skill(data-skill=skillID, data-sprite=sprite, data-lvl=lvl)
        div.skill-bdr
        div.badge.skill-lvl
    else
      div.skill