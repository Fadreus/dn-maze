extends layout

block custom_script
  -
    var urls  = JSON.stringify({
      mainbar: fn.url.mainbar(),
      border: fn.url.uitemplatetexture('uit_gesturebutton'),
      job: fn.url.json(line[2].EnglishName)
    });
    var job = JSON.stringify({
      EnglishName: line[2].EnglishName,
      MaxLevel: cap,
      Levels: levels,
      SP: sp_ratios
    });
  script(type='text/javascript', src=fn.url.js('dnss'))
  script(type='text/javascript', src=fn.url.js('skill'))
  script(type='text/javascript', src=fn.url.js('description'))
  script(type='text/javascript') var db;dnss(!{urls});var Job=!{job};

block content
  div(class='container')
    div(class='row')
      each job, index in line
        div(class='col-md-4')
          div(class='panel panel-default noselect')
            +panel_header(job, index)
            +panel_body(job)

mixin panel_header(job, index)
  - var sp = [0, Math.floor(max_sp * sp_ratios[index])]
  div(class='panel-heading')= job.JobName
    div(class='jobsprite', style=fn.image.job(job))
    span(class='label pull-right') #{sp.join('/')}

mixin panel_body(job)
  div(class='panel-body')
    table(class='skill-table', style=fn.image.skilltree(job))
      each skillRow in job.SkillTree
        tr(class='skill-tr')
          each skillID in skillRow
            +skill(job.Skills[skillID], skillID)

mixin skill(skill, skillID)
  td(class='skill-td')
    if skill
      - var sprite = [skill.Sprite, skill.IconCol, skill.IconRow].join(',')
      -
        var lvl = [
          skill.Levels[1].LevelLimit == 1 ? 1 : 0,
          skill.MaxLevel - skill.SPMaxLevel
        ].join(',')
      div(class='skill', data-skill=skillID, data-sprite=sprite, data-lvl=lvl)
        div(class='skill-bdr')
        div(class='badge skill-lvl')
    else
      div(class='skill')